name: XHlive

on:
  schedule:
    - cron: '0 2 * * *' # 每天凌晨2点执行
  push: # 项目有新提交时触发
    branches:
      - main
      - 'releases/**' # 可以根据需要添加其他分支

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Tag Name
        id: generate_tag
        run: |
          # Generate tag name in the format vYY.MM.DD.HH
          TAG_NAME="v$(date +'%y.%m.%d.%H' | sed 's/\b\([0-9]\)/0\1/g')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_ENV

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Get History
        id: get_history
        run: |
          chmod +x history.sh
          output=$(./history.sh)
          echo "$output" > history.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: Release ${{ env.tag_name }}
          draft: false
          prerelease: false
          body_path: history.md

      - name: Run build with Gradle wrapper
        run: ./gradlew clean && ./gradlew assembleRelease

      - name: Sign app APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          alias: ${{ secrets.ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ALIAS_PASSWORD }}
        env:
          # Override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Set Asset Name
        id: set_asset_name
        run: |
          VERSION_WITHOUT_V=$(echo '${{ env.tag_name }}' | sed 's/^v//')
          echo "asset_name=XHlive.${VERSION_WITHOUT_V}.apk" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: application/vnd.android.package-archive