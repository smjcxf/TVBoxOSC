name: XHlive
# 代码来自xinyi1984
on:
  schedule:
    - cron: 0 6 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: xisohi
            repoName: XHlive
            branchName: main

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check New Commit
        run: |
          upStream="https://github.com/${{  matrix.userName }}/${{ matrix.repoName }}"
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL "https://api.github.com/repos/${{  matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }}" | jq -r '.sha')
          if [ $? -ne 0 ]; then
            echo "Failed to get commit from API"
            exit 1
          fi
          if [ -z "$commit" ] || ! grep -q "$commit" README.md; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi

      - name: Generate Tag Name
        id: generate_tag
        run: |
          TAG_NAME="v$(date +'%y.%m.%d.%H')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_ENV
          VERSION_CODE="$(date +'%y%m%d%H')"
          echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

      - name: Push to master
        if: ${{ env.commit }}
        run: |
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}\/tree\/${{ matrix.branchName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          sed -i "s/\"version_code\": [0-9]*/\"version_code\": ${{ env.version_code }}/" update/${{ matrix.branchName }}.json
          sed -i "s/\"version_name\": \"v[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\"/\"version_name\": \"${{ env.tag_name }}\"/" update/${{ matrix.branchName }}.json
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin master
          #continue-on-error: true 是因为 git commit 会失败也是预期的，这个步骤可以忽略失败。加上这个命令就可以在这个步骤失败的时候，不会影响其他步骤
        continue-on-error: true